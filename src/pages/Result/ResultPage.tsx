import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Header from '../../components/Header/Header';
import Card from '../../components/Card/Card';
import Button from '../../components/Button/Button';
import ResultsTable from '../../components/ResultsTable/ResultsTable';
import { useResults } from '../../hooks/useResults';
import { useGameStore } from '../../store/gameStore';
import type { AnswerHistory } from '../../types';
import styles from './ResultPage.module.css';

const ResultPage: React.FC = () => {
  const navigate = useNavigate();
  const { results, clearResults } = useGameStore();
  const [score, setScore] = useState(0);
  const [answersHistory, setAnswersHistory] = useState<AnswerHistory[]>([]);

  useEffect(() => {
    const savedResults = sessionStorage.getItem('quizResults');
    if (savedResults) {
      const results = JSON.parse(savedResults);
      setScore(results.score);
      setAnswersHistory(results.answersHistory);
    } else {
      navigate("/");
    }
  }, [navigate]);

  const { total, correct, incorrect, skipped, percent } = useResults(answersHistory);

  const getResultMessage = () => {
    if (correct === total) return "–Ü–¥–µ–∞–ª—å–Ω–æ! –¢–∏ –∫—ñ–Ω–æ–∑–Ω–∞–≤–µ—Ü—å –µ–∫—Å—Ç—Ä–∞-–∫–ª–∞—Å—É! üéâ";
    if (percent >= 80) return "–í—ñ—Ç–∞—é! –¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –∫—ñ–Ω–æ–∑–Ω–∞–≤–µ—Ü—å! üëç";
    if (percent >= 60) return "–î–æ–±—Ä–µ –∑–Ω–∞—î—à —Ñ—ñ–ª—å–º–∏! üòä";
    if (percent >= 40) return "–ù–µ–ø–æ–≥–∞–Ω–æ, –∞–ª–µ —î –∫—É–¥–∏ —Ä–æ—Å—Ç–∏! ü§î";
    return "–°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑! –¢–∏ –∑–º–æ–∂–µ—à –∫—Ä–∞—â–µ! üí™";
  };

  const getResultEmoji = () => {
    if (correct === total) return "üèÜ";
    if (percent >= 80) return "‚≠ê";
    if (percent >= 60) return "üëç";
    if (percent >= 40) return "ü§î";
    return "üí™";
  };

  const handleRestart = () => {
    navigate('/game');
  };

  const handleNewGame = () => {
    navigate("/");
  };

  const handleUserProfile = () => {
    const userId = useGameStore.getState().currentUserId;
    navigate(`/user/${userId}`);
  };

  const handleClearResults = () => {
    if (window.confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤?')) {
      clearResults();
    }
  };

  return (
    <div className="page">
      <Header />

      <Card size="large" className={styles.card}>
        <div className={styles.content}>
          <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≥—Ä–∏ {getResultEmoji()}</h2>

          <div className={styles.score}>
            <div className={styles.scoreCircle}>
              <span className={styles.scoreValue}>{score}</span>
              <span className={styles.scoreLabel}>–±–∞–ª—ñ–≤</span>
            </div>
          </div>

          <div className={styles.message}>
            <p>{getResultMessage()}</p>
          </div>

          <div className={styles.details}>
            <div className={styles.statsGrid}>
              <div className={`${styles.stat} ${styles.statCorrect}`}>
                <span className={styles.statValue}>{correct}</span>
                <span className={styles.statLabel}>–ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö</span>
              </div>

              <div className={`${styles.stat} ${styles.statIncorrect}`}>
                <span className={styles.statValue}>{incorrect}</span>
                <span className={styles.statLabel}>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö</span>
              </div>

              <div className={`${styles.stat} ${styles.statSkipped}`}>
                <span className={styles.statValue}>{skipped}</span>
                <span className={styles.statLabel}>–ü—Ä–æ–ø—É—â–µ–Ω–æ</span>
              </div>

              <div className={`${styles.stat} ${styles.statTotal}`}>
                <span className={styles.statValue}>{total}</span>
                <span className={styles.statLabel}>–í—Å—å–æ–≥–æ</span>
              </div>

              <div className={`${styles.stat} ${styles.statPercent}`}>
                <span className={styles.statValue}>{percent}%</span>
                <span className={styles.statLabel}>–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å</span>
              </div>
            </div>
          </div>

          <div className={styles.breakdown}>
            <h4>–î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h4>
            <ul>
              <li>–ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: <strong>{correct}</strong></li>
              <li>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: <strong>{incorrect}</strong></li>
              <li>–ü—Ä–æ–ø—É—â–µ–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: <strong>{skipped}</strong></li>
              <li>–ó–∞–≥–∞–ª—å–Ω–∞ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: <strong>{percent}%</strong></li>
            </ul>
          </div>

          <p className={styles.summary}>
            {correct > 0 ? `–¢–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–≤ –Ω–∞ ${correct} –∑ ${total} –∑–∞–ø–∏—Ç–∞–Ω—å` : '–ù–∞ –∂–∞–ª—å, —Ç–∏ –Ω–µ –¥–∞–≤ –∂–æ–¥–Ω–æ—ó –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ'}
            {skipped > 0 && ` (–ø—Ä–æ–ø—É—â–µ–Ω–æ ${skipped} –ø–∏—Ç–∞–Ω—å)`}
            {incorrect > 0 && `, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: ${incorrect}`}
          </p>
        </div>

        <div className={styles.actions}>
          <Button onClick={handleRestart} variant="primary">
            –ì—Ä–∞—Ç–∏ –∑–Ω–æ–≤—É
          </Button>
          <Button onClick={handleNewGame} variant="secondary">
            –ù–æ–≤–∞ –≥—Ä–∞
          </Button>
          <Button onClick={handleUserProfile} variant="secondary">
            –ü—Ä–æ—Ñ—ñ–ª—å
          </Button>
          {results.length > 0 && (
            <Button onClick={handleClearResults} variant="secondary">
              –û—á–∏—Å—Ç–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
            </Button>
          )}
        </div>
      </Card>

      {results.length > 0 && (
        <Card className={styles.resultsCard}>
          <h3>–Ü—Å—Ç–æ—Ä—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤</h3>
          <ResultsTable results={results} />
        </Card>
      )}
    </div>
  );
};

export default ResultPage;